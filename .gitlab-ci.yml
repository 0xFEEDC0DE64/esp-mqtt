stages:
  - build
  - deploy


variables:
  IDF_REPO: ${GITLAB_SSH_SERVER}/idf/esp-idf.git

.add_gh_key_remote: &add_gh_key_remote |
  cit_add_ssh_key "${GH_PUSH_KEY}"
  git remote remove github || true
  git remote add github ${GH_PUSH_REPO}

before_script:
  # Use CI Tools
  - curl -sSL ${CIT_LOADER_URL} | sh
  - source citools/import_functions
  # Add gitlab ssh key
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -n $GITLAB_KEY > ~/.ssh/id_rsa_base64
  - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - PATH=$CI_PROJECT_DIR/esp-idf/tools:$PATH
  - export IDF_PATH=$CI_PROJECT_DIR/esp-idf
  - export MQTT_PATH=$CI_PROJECT_DIR

build_with_idf_v5:
  stage: build
  image: ${CI_DOCKER_REGISTRY}/esp-env-v5.0:1
  tags:
    - build
    - shiny
  dependencies: []
  variables:
    PYTHON_VER: 3.6.13
  script:
    - git clone "${IDF_REPO}"
    - cd ${IDF_PATH} && set +u && source tools/ci/setup_python.sh
    - $MQTT_PATH/ci/set_idf.sh master
    - $IDF_PATH/tools/idf_tools.py install-python-env
    - cd $IDF_PATH && tools/idf_tools.py --non-interactive install && eval "$(tools/idf_tools.py --non-interactive export)"
    - $MQTT_PATH/ci/set_mqtt.sh $CI_COMMIT_SHA
    - export PEDANTIC_CFLAGS="-Werror -Werror=deprecated-declarations -Werror=unused-variable -Werror=unused-but-set-variable -Werror=unused-function"
    - export EXTRA_CFLAGS=${PEDANTIC_CFLAGS} && export EXTRA_CXXFLAGS=${EXTRA_CFLAGS}
    - $MQTT_PATH/ci/build_examples.sh

push_master_to_github:
  stage: deploy
  image: ${CI_DOCKER_REGISTRY}/esp32-ci-env
  tags:
    - build
  only:
    - master
    - idf
  when: on_success
  variables:
    GIT_STRATEGY: clone
  script:
    - *add_gh_key_remote
    - git push github HEAD:${CI_COMMIT_REF_NAME}
